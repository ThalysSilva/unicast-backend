services:
  unicast-api:
    container_name: unicast-api
    build:
      context: .
      dockerfile: Dockerfile
      args:
        POSTGRES_DATABASE_URL: ${POSTGRES_DATABASE_URL}
        API_PORT: ${API_PORT}
    ports:
      - '${API_PORT}:${API_PORT}'
    env_file:
      - .env
    depends_on:
      - mongo-unicast
      - postgres-unicast
    networks:
      - unicast-network

  postgres-unicast:
    container_name: postgres-unicast
    image: postgres:15
    command:
      ["postgres", "-p", "${POSTGRES_PORT}", "-c", "max_connections=1000"]
    restart: always
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - unicast-network

  mongo-unicast:
    image: mongo:6.0
    container_name: mongo-unicast
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongo-data:/data/db
    networks:
      - unicast-network

  evolution-api-unicast:
    container_name: evolution-api-unicast
    image: atendai/evolution-api:v2.1.1
    restart: always
    ports:
      - "${EVOLUTION_PORT}:${EVOLUTION_PORT}"
    env_file:
      - .env
    volumes:
      - evolution_instances:/evolution/instances
    networks:
      - unicast-network
    depends_on:
      - postgres-unicast
      - redis-unicast

  pgadmin-unicast:
    container_name: pgadmin-unicast
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "4000:80"
    networks:
      - unicast-network
    depends_on:
      - postgres-unicast

  redis-unicast:
    image: redis:latest
    container_name: redis-unicast
    command: >
      redis-server --port ${REDIS_PORT} --appendonly yes --save ""
    volumes:
      - evolution_redis:/data
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    networks:
      - unicast-network

volumes:
  evolution_instances:
  postgres_data:
  pgadmin_data:
  evolution_redis:
  mongo-data:

networks:
  unicast-network:
    name: unicast-network
    driver: bridge
